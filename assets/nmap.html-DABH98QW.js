import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as s,b as n}from"./app-DrsE8OIX.js";const l="/work-blog/assets/nmap_01-BWnASOHB.jpg",t="/work-blog/assets/nmap_02-DmTRjNqz.jpg",p="/work-blog/assets/nmap_03-CD41kj8i.jpg",i="/work-blog/assets/nmap_04-BYzJ9Hnk.jpg",r="/work-blog/assets/nmap_05-BWXufwLs.jpg",c="/work-blog/assets/nmap_06-CD8ctAcj.jpg",o="/work-blog/assets/nmap_07-cIszR78a.jpg",d={},m=n('<h2 id="总览" tabindex="-1"><a class="header-anchor" href="#总览"><span>总览</span></a></h2><figure><img src="'+l+`" alt="nmap总览图" tabindex="0" loading="lazy"><figcaption>nmap总览图</figcaption></figure><h2 id="端口扫描" tabindex="-1"><a class="header-anchor" href="#端口扫描"><span>端口扫描</span></a></h2><p>扫描主机的「开放端口」，在nmap后面直接跟主机IP（默认扫描1000个端口）。「指定端口」，使用 -p 参数，可以一次扫描单个端口、多个端口、或扫描一个范围的端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180

nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span>
nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">1</span>-80
nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80,3389</span>,22,21
nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">1</span>-65535
nmap <span class="token number">192.168</span>.31.180 -p-    <span class="token comment"># -p- 等价于 -p 1-65535</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tcp全连接扫描" tabindex="-1"><a class="header-anchor" href="#tcp全连接扫描"><span>TCP全连接扫描</span></a></h2><p>使用 <code>-sT</code> 参数进行TCP全连接扫描。 「全连接扫描」使用完整的三次握手建立链接，能够建立链接就判定端口开放，否则判定端口关闭。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sT</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>如果端口开放，就会进行完整的三次握手，成功建立链接，扫描结果中，STATE字段显示为 open <img src="`+t+'" alt="端口开放" loading="lazy"></p></li><li><p>如果端口关闭，就只能进行一次握手，无法建立链接，扫描结果中，STATE字段显示为 closed <img src="'+p+`" alt="端口关闭" loading="lazy"></p></li></ol><h2 id="syn半链接扫描" tabindex="-1"><a class="header-anchor" href="#syn半链接扫描"><span>SYN半链接扫描</span></a></h2><p>使用 <code>-sS</code> 参数进行SYN半链接扫描。 「半链接扫描」只进行两次握手，对方返回确认帧（ACK=1）就判定端口开放，否则判定端口关闭。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sS</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>如果端口开放，就会进行两次握手，扫描结果中，STATE字段为 open <img src="`+i+'" alt="端口开放" loading="lazy"></p></li><li><p>如果端口关闭，就只有一次握手，扫描结果中，STATE字段为 closed <img src="'+r+`" alt="端口关闭" loading="lazy"></p></li></ol><h2 id="隐秘扫描" tabindex="-1"><a class="header-anchor" href="#隐秘扫描"><span>隐秘扫描</span></a></h2><blockquote><p>隐秘扫描，只适用于Linux系统<br> 「隐秘扫描」向目标主机的端口发送TCP FIN包 或 Xmas tree包 或 Null包，如果收到RST响应包，就判定端口关闭，否则就判定端口开放或被屏蔽（open/filtered）</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sF</span>  <span class="token comment"># Fin扫描</span>
nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sN</span>  <span class="token comment"># Null扫描（所有flags都为0的TCP包）</span>
nmap <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sX</span>  <span class="token comment"># Xmas扫描（flags的FIN、URG、PUSH都为1的包）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主机探测" tabindex="-1"><a class="header-anchor" href="#主机探测"><span>主机探测</span></a></h2><p>扫描网段中有哪些主机在线，使用 -sP 参数，不扫描端口，只扫描「存活主机」。 本质上是Ping扫描，能Ping通有回包，就判定主机在线。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-sP</span> <span class="token number">192.168</span>.31.0/24
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从上图可以看到：它用2秒扫描了这个网段的256个IP，其中有3个存活主机，效率还是蛮不错的。</p><h2 id="服务识别" tabindex="-1"><a class="header-anchor" href="#服务识别"><span>服务识别</span></a></h2><p>扫描端口时，默认显示端口对应的服务，但不显示服务版本。 想要识别具体的「服务版本」，可以使用 -sV 参数。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-sV</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+c+`" alt="服务识别" tabindex="0" loading="lazy"><figcaption>服务识别</figcaption></figure><h2 id="系统识别" tabindex="-1"><a class="header-anchor" href="#系统识别"><span>系统识别</span></a></h2><p>想要识别「操作系统版本」，可以使用 -O 参数。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-O</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">提示</p><p>1.Nmap扫描出的系统版本并完全准确，仅供参考。 2.当识别不出具体版本时，Nmap会以概率的形式列举出可能的操作系统，如上图所示。</p></div><h2 id="扫描结果导出" tabindex="-1"><a class="header-anchor" href="#扫描结果导出"><span>扫描结果导出</span></a></h2><p>Nmap的扫描结果可以保存到文件中，比如文本格式、XML格式。</p><h3 id="将扫描结果导出为「文本格式」-结果原样保存" tabindex="-1"><a class="header-anchor" href="#将扫描结果导出为「文本格式」-结果原样保存"><span>将扫描结果导出为「文本格式」，结果原样保存</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nmap <span class="token number">192.168</span>.31.180 <span class="token parameter variable">-p</span> <span class="token number">80</span> <span class="token parameter variable">-oN</span> result.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+o+'" alt="结果保存" tabindex="0" loading="lazy"><figcaption>结果保存</figcaption></figure>',33),u=[m];function h(b,g){return e(),s("div",null,u)}const f=a(d,[["render",h],["__file","nmap.html.vue"]]),_=JSON.parse('{"path":"/software/linux/nmap.html","title":"nmap","lang":"zh-CN","frontmatter":{"title":"nmap","catalog":"Linux","description":"总览 nmap总览图nmap总览图 端口扫描 扫描主机的「开放端口」，在nmap后面直接跟主机IP（默认扫描1000个端口）。「指定端口」，使用 -p 参数，可以一次扫描单个端口、多个端口、或扫描一个范围的端口 TCP全连接扫描 使用 -sT 参数进行TCP全连接扫描。 「全连接扫描」使用完整的三次握手建立链接，能够建立链接就判定端口开放，否则判定端口...","head":[["meta",{"property":"og:url","content":"https://yuhaoxiang.github.io/work-blog/work-blog/software/linux/nmap.html"}],["meta",{"property":"og:site_name","content":"大杂烩"}],["meta",{"property":"og:title","content":"nmap"}],["meta",{"property":"og:description","content":"总览 nmap总览图nmap总览图 端口扫描 扫描主机的「开放端口」，在nmap后面直接跟主机IP（默认扫描1000个端口）。「指定端口」，使用 -p 参数，可以一次扫描单个端口、多个端口、或扫描一个范围的端口 TCP全连接扫描 使用 -sT 参数进行TCP全连接扫描。 「全连接扫描」使用完整的三次握手建立链接，能够建立链接就判定端口开放，否则判定端口..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-28T08:47:19.000Z"}],["meta",{"property":"article:author","content":"yhx"}],["meta",{"property":"article:modified_time","content":"2024-04-28T08:47:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nmap\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-28T08:47:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yhx\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"总览","slug":"总览","link":"#总览","children":[]},{"level":2,"title":"端口扫描","slug":"端口扫描","link":"#端口扫描","children":[]},{"level":2,"title":"TCP全连接扫描","slug":"tcp全连接扫描","link":"#tcp全连接扫描","children":[]},{"level":2,"title":"SYN半链接扫描","slug":"syn半链接扫描","link":"#syn半链接扫描","children":[]},{"level":2,"title":"隐秘扫描","slug":"隐秘扫描","link":"#隐秘扫描","children":[]},{"level":2,"title":"主机探测","slug":"主机探测","link":"#主机探测","children":[]},{"level":2,"title":"服务识别","slug":"服务识别","link":"#服务识别","children":[]},{"level":2,"title":"系统识别","slug":"系统识别","link":"#系统识别","children":[]},{"level":2,"title":"扫描结果导出","slug":"扫描结果导出","link":"#扫描结果导出","children":[{"level":3,"title":"将扫描结果导出为「文本格式」，结果原样保存","slug":"将扫描结果导出为「文本格式」-结果原样保存","link":"#将扫描结果导出为「文本格式」-结果原样保存","children":[]}]}],"git":{"createdTime":1714294039000,"updatedTime":1714294039000,"contributors":[{"name":"haoxiang.yu@sectrend.com.cn","email":"ZLJw5dEMQLaVgsP","commits":1}]},"readingTime":{"minutes":2.6,"words":779},"filePathRelative":"software/linux/nmap.md","localizedDate":"2024年4月28日","autoDesc":true}');export{f as comp,_ as data};
