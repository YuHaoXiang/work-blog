import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as s,c as i,d as e,e as t,a as d,w as p,b as h}from"./app-DrsE8OIX.js";const o={},c=h(`<h1 id="dperf" tabindex="-1"><a class="header-anchor" href="#dperf"><span>dperf</span></a></h1><p>dperf 是一个100Gbps的网络性能与压力测试软件。</p><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><ul><li>性能强大： <ul><li>基于 DPDK，使用一台普通 x86 服务器就可以产生巨大的流量：千万级的 HTTP 每秒新建连接数，数百Gbps的带宽，几十亿的并发连接数</li></ul></li><li>统计信息详细： <ul><li>能够输出详细的统计信息，并且识别每一个丢包</li></ul></li><li>使用场景丰富： <ul><li>可用于对四层负载均衡等四层网关进行性能压力测试、长稳测试</li><li>可用于对云上虚拟机的网络性能进行测试</li><li>可用于对网卡性能、CPU的网络报文处理能力进行测试</li><li>压测场景下，可作为高性能的HTTP Server或HTTP Client单独使用</li></ul></li></ul><h2 id="性能" tabindex="-1"><a class="header-anchor" href="#性能"><span>性能</span></a></h2><h3 id="http每秒新建连接数" tabindex="-1"><a class="header-anchor" href="#http每秒新建连接数"><span>HTTP每秒新建连接数</span></a></h3><table><thead><tr><th>Client Cores</th><th>Server Cores</th><th>HTTP CPS</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>2,101,044</td></tr><tr><td>2</td><td>2</td><td>4,000,423</td></tr><tr><td>4</td><td>4</td><td>7,010,743</td></tr><tr><td>6</td><td>6</td><td>10,027,172</td></tr></tbody></table><h3 id="http吞吐" tabindex="-1"><a class="header-anchor" href="#http吞吐"><span>HTTP吞吐</span></a></h3><table><thead><tr><th>Client Cores</th><th>Server Cores</th><th>RX(Gbps)</th><th>TX(Gbps)</th><th>Client CPU Usage(%)</th><th>Server CPU Usage(%)</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>18</td><td>18</td><td>60</td><td>59</td></tr><tr><td>2</td><td>2</td><td>35</td><td>35</td><td>60</td><td>59</td></tr><tr><td>4</td><td>4</td><td>46</td><td>46</td><td>43</td><td>43</td></tr></tbody></table><h3 id="http并发连接数" tabindex="-1"><a class="header-anchor" href="#http并发连接数"><span>HTTP并发连接数</span></a></h3><table><thead><tr><th>Client Cores</th><th>Server Cores</th><th>Current Connections</th><th>Client CPU Usage(%)</th><th>Server CPU Usage(%)</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>100,000,000</td><td>34</td><td>39</td></tr><tr><td>2</td><td>2</td><td>200,000,000</td><td>36</td><td>39</td></tr><tr><td>4</td><td>4</td><td>400,000,000</td><td>40</td><td>41</td></tr></tbody></table><h3 id="udp-tx-pps" tabindex="-1"><a class="header-anchor" href="#udp-tx-pps"><span>UDP TX PPS</span></a></h3><table><thead><tr><th>Client Cores</th><th>TX MPPS</th><th>Client CPU Usage(%)</th></tr></thead><tbody><tr><td>1</td><td>15.96</td><td>95</td></tr><tr><td>2</td><td>29.95</td><td>95</td></tr><tr><td>4</td><td>34.92</td><td>67</td></tr><tr><td>6</td><td>35.92</td><td>54</td></tr><tr><td>8</td><td>37.12</td><td>22</td></tr></tbody></table><p>注意：本测试基于单张25Gbps Mellanox CX4</p><h3 id="测试环境配置-客户端、服务器" tabindex="-1"><a class="header-anchor" href="#测试环境配置-客户端、服务器"><span>测试环境配置（客户端、服务器）</span></a></h3><p>dperf 的以上性能数据，基于下面的配置测试得到：</p><ul><li>内存: 512GB(大页 100GB)</li><li>网卡: Mellanox MT27710 25Gbps * 2</li><li>内核: 4.19.90</li></ul><h2 id="统计数据" tabindex="-1"><a class="header-anchor" href="#统计数据"><span>统计数据</span></a></h2><p>dperf 每秒输出多种统计数据：</p><ul><li>TPS, CPS, 各种维度的PPS</li><li>TCP/Socket/HTTP级别的错误数</li><li>丢包数</li><li>按照TCP Flag分类的报文重传数</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>seconds 22                 cpuUsage 52
pktRx   3,001,058          pktTx    3,001,025          bitsRx   2,272,799,040      bitsTx  1,920,657,600      dropTx  0
arpRx   0                  arpTx    0                  icmpRx   0                  icmpTx  0                  otherRx 0          badRx 0
synRx   1,000,345          synTx    1,000,330          finRx    1,000,350          finTx   1,000,350          rstRx   0          rstTx 0
synRt   0                  finRt    0                  ackRt    0                  pushRt  0                  tcpDrop 0
skOpen  1,000,330          skClose  1,000,363          skCon    230                skErr   0
httpGet 1,000,345          http2XX  1,000,350          httpErr  0
ierrors 0                  oerrors  0                  imissed  0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始使用" tabindex="-1"><a class="header-anchor" href="#开始使用"><span>开始使用</span></a></h2><h3 id="设置大页" tabindex="-1"><a class="header-anchor" href="#设置大页"><span>设置大页</span></a></h3><pre><code>#参考如下参数编辑 &#39;/boot/grub2/grub.cfg&#39;，然后重启OS
linux16 /vmlinuz-... nopku transparent_hugepage=never default_hugepagesz=1G hugepagesz=1G hugepages=8
</code></pre><h3 id="编译dpdk" tabindex="-1"><a class="header-anchor" href="#编译dpdk"><span>编译DPDK</span></a></h3><pre><code>#编辑&#39;config/common_base&#39;打开PMD开关
#Mellanox CX4/CX5 requires &#39;CONFIG_RTE_LIBRTE_MLX5_PMD=y&#39;
#HNS3 requires &#39;CONFIG_RTE_LIBRTE_HNS3_PMD=y&#39;
#VMXNET3 requires &#39;CONFIG_RTE_LIBRTE_VMXNET3_PMD=y&#39;

TARGET=x86_64-native-linuxapp-gcc #or arm64-armv8a-linuxapp-gcc
cd /root/dpdk/dpdk-stable-19.11.10
make install T=$TARGET -j16
</code></pre><h3 id="编译dperf" tabindex="-1"><a class="header-anchor" href="#编译dperf"><span>编译dperf</span></a></h3><pre><code>cd dperf
make -j8 RTE_SDK=/root/dpdk/dpdk-stable-19.11.10 RTE_TARGET=$TARGET
</code></pre><h3 id="绑定网卡" tabindex="-1"><a class="header-anchor" href="#绑定网卡"><span>绑定网卡</span></a></h3><pre><code>#Mellanox网卡跳过此步
#假设PCI号是0000:1b:00.0

modprobe uio
modprobe uio_pci_generic
/root/dpdk/dpdk-stable-19.11.10/usertools/dpdk-devbind.py -b uio_pci_generic 0000:1b:00.0
</code></pre><h3 id="启动dperf-server" tabindex="-1"><a class="header-anchor" href="#启动dperf-server"><span>启动dperf server</span></a></h3><pre><code>#dperf server监听6.6.241.27:80, 网关是6.6.241.1
./build/dperf -c test/http/server-cps.conf
</code></pre><h3 id="从客户端发送请求" tabindex="-1"><a class="header-anchor" href="#从客户端发送请求"><span>从客户端发送请求</span></a></h3><pre><code>#客户端IP必须要在配置文件的&#39;client&#39;范围内
ping 6.6.241.27
curl http://6.6.241.27/
</code></pre><h2 id="运行测试" tabindex="-1"><a class="header-anchor" href="#运行测试"><span>运行测试</span></a></h2><p>下面的例子运行一个HTTP CPS压力测试。</p><pre><code>#在server端运行dperf
./build/dperf -c test/http/server-cps.conf

#以另一台机器作为client端，运行dperf
./build/dperf -c test/http/client-cps.conf
</code></pre><h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h2>`,38),u={href:"https://dperf.org/",target:"_blank",rel:"noopener noreferrer"},f=e("h2",{id:"限制",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#限制"},[e("span",null,"限制")])],-1),b=e("ul",null,[e("li",null,"dperf 要求HTTP消息在一个数据包中，所以不适合7层负载均衡的测试。"),e("li",null,"dperf 要求独占使用网络接口。"),e("li",null,"dperf 没有路由功能。建议配合三层交换机搭建测试环境。")],-1),_=e("h2",{id:"贡献",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#贡献"},[e("span",null,"贡献")])],-1),g=e("h2",{id:"专利",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#专利"},[e("span",null,"专利")])],-1),T=e("ul",null,[e("li",null,"彭建章(2024). 网络设备的测试方法及其装置. CN114205274B. 2024-06-11.")],-1),x=e("h2",{id:"作者",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#作者"},[e("span",null,"作者")])],-1),m={href:"https://github.com/pengjianzhang",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"许可",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#许可"},[e("span",null,"许可")])],-1),k={href:"https://www.apache.org/licenses/LICENSE-2.0",target:"_blank",rel:"noopener noreferrer"};function P(C,y){const r=n("ExternalLinkIcon"),l=n("RouteLink");return s(),i("div",null,[c,e("p",null,[t("请访问"),e("a",u,[t("https://dperf.org/"),d(r)]),t(".")]),f,b,_,e("p",null,[t("dperf 欢迎大家贡献。详情请参阅"),d(l,{to:"/software/stress_test/CONTRIBUTING.html"},{default:p(()=>[t("贡献指南")]),_:1}),t("。")]),g,T,x,e("ul",null,[e("li",null,[e("a",m,[t("Jianzhang Peng"),d(r)]),t(", 中国科学技术大学计算机专业博士，曾在华为和百度担任主任工程师一职，参与了7层负载均衡与4层负载均衡系统的开发。在百度工作期间，他开发了dperf项目。即使从百度离职后，他仍然致力于维护dperf项目。目前，他在新加坡工作，专注于研究和实现加密货币的高频量化交易的低时延网络系统。")])]),v,e("p",null,[t("dperf基于 "),e("a",k,[t("Apache License, Version 2.0"),d(r)]),t(" 许可证。")])])}const S=a(o,[["render",P],["__file","network_stress_test.html.vue"]]),E=JSON.parse('{"path":"/software/stress_test/network_stress_test.html","title":"dperf网络压力测试","lang":"zh-CN","frontmatter":{"title":"dperf网络压力测试","icon":"software","description":"dperf dperf 是一个100Gbps的网络性能与压力测试软件。 优点 性能强大： 基于 DPDK，使用一台普通 x86 服务器就可以产生巨大的流量：千万级的 HTTP 每秒新建连接数，数百Gbps的带宽，几十亿的并发连接数 统计信息详细： 能够输出详细的统计信息，并且识别每一个丢包 使用场景丰富： 可用于对四层负载均衡等四层网关进行性能压力测试...","head":[["meta",{"property":"og:url","content":"https://yuhaoxiang.github.io/work-blog/work-blog/software/stress_test/network_stress_test.html"}],["meta",{"property":"og:site_name","content":"大杂烩"}],["meta",{"property":"og:title","content":"dperf网络压力测试"}],["meta",{"property":"og:description","content":"dperf dperf 是一个100Gbps的网络性能与压力测试软件。 优点 性能强大： 基于 DPDK，使用一台普通 x86 服务器就可以产生巨大的流量：千万级的 HTTP 每秒新建连接数，数百Gbps的带宽，几十亿的并发连接数 统计信息详细： 能够输出详细的统计信息，并且识别每一个丢包 使用场景丰富： 可用于对四层负载均衡等四层网关进行性能压力测试..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-24T06:53:36.000Z"}],["meta",{"property":"article:author","content":"yhx"}],["meta",{"property":"article:modified_time","content":"2025-06-24T06:53:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"dperf网络压力测试\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-24T06:53:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yhx\\",\\"url\\":\\"/\\"}]}"]]},"headers":[{"level":2,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":2,"title":"性能","slug":"性能","link":"#性能","children":[{"level":3,"title":"HTTP每秒新建连接数","slug":"http每秒新建连接数","link":"#http每秒新建连接数","children":[]},{"level":3,"title":"HTTP吞吐","slug":"http吞吐","link":"#http吞吐","children":[]},{"level":3,"title":"HTTP并发连接数","slug":"http并发连接数","link":"#http并发连接数","children":[]},{"level":3,"title":"UDP TX PPS","slug":"udp-tx-pps","link":"#udp-tx-pps","children":[]},{"level":3,"title":"测试环境配置（客户端、服务器）","slug":"测试环境配置-客户端、服务器","link":"#测试环境配置-客户端、服务器","children":[]}]},{"level":2,"title":"统计数据","slug":"统计数据","link":"#统计数据","children":[]},{"level":2,"title":"开始使用","slug":"开始使用","link":"#开始使用","children":[{"level":3,"title":"设置大页","slug":"设置大页","link":"#设置大页","children":[]},{"level":3,"title":"编译DPDK","slug":"编译dpdk","link":"#编译dpdk","children":[]},{"level":3,"title":"编译dperf","slug":"编译dperf","link":"#编译dperf","children":[]},{"level":3,"title":"绑定网卡","slug":"绑定网卡","link":"#绑定网卡","children":[]},{"level":3,"title":"启动dperf server","slug":"启动dperf-server","link":"#启动dperf-server","children":[]},{"level":3,"title":"从客户端发送请求","slug":"从客户端发送请求","link":"#从客户端发送请求","children":[]}]},{"level":2,"title":"运行测试","slug":"运行测试","link":"#运行测试","children":[]},{"level":2,"title":"文档","slug":"文档","link":"#文档","children":[]},{"level":2,"title":"限制","slug":"限制","link":"#限制","children":[]},{"level":2,"title":"贡献","slug":"贡献","link":"#贡献","children":[]},{"level":2,"title":"专利","slug":"专利","link":"#专利","children":[]},{"level":2,"title":"作者","slug":"作者","link":"#作者","children":[]},{"level":2,"title":"许可","slug":"许可","link":"#许可","children":[]}],"git":{"createdTime":1750748016000,"updatedTime":1750748016000,"contributors":[{"name":"余浩翔","email":"1x2_ou6tn9m4r4@dingtalk.com","commits":1}]},"readingTime":{"minutes":3.37,"words":1010},"filePathRelative":"software/stress_test/network_stress_test.md","localizedDate":"2025年6月24日","autoDesc":true}');export{S as comp,E as data};
